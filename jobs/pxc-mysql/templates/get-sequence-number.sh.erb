#!/usr/bin/env bash

set -eu

# Nice output formatting
normal=$(tput sgr0)
bold=$(tput bold)
red=$(tput setaf 1)

<% if_link('galera-agent') do |galera_agent| %>

report_sequence_number() {
    if bpm pid pxc-mysql -p galera-init > /dev/null 2>&1; then
      echo ""
      echo -e "${bold}${red}\tCannot get sequence number while MySQL is running."
      echo -e "\tRefer to documentation on how to shut down running instances.${normal}"
      echo ""
      return 1
    fi

    cluster_uuid=$(awk '/uuid:/ { print $2; }' /var/vcap/store/pxc-mysql/grastate.dat)

    endpoint_port=<%= galera_agent.p('port') %>
    endpoint_user=<%= galera_agent.p('endpoint_username') %>
    endpoint_password=<%= galera_agent.p('endpoint_password') %>

    result=$(wget --content-on-error \
        -qO- \
        "http://${endpoint_user}:${endpoint_password}@localhost:${endpoint_port}/sequence_number") || rc=$?

    if [[ ${rc:-0} -ne 0 ]]; then
      echo "${bold}${red}Failure obtaining sequence number!"
      echo "Result was: [ ${result} ]${normal}"
      return 1
    fi

    seq_no="${result}"

    if [[ "$seq_no" =~ [0-9]+$ ]]; then
      instance_id=$(</var/vcap/instance/id)
      echo "{  \"cluster_uuid\": \"${cluster_uuid}\", \"seqno\": ${seq_no}, \"instance_id\": \"${instance_id}\" }"
    else
      echo "${bold}${red}Sequence number found does not appear to be a valid number: ${seq_no}${normal}"
    fi
}

report_sequence_number

<% end.else do %>
echo "${bold}${red}This tool only works with a Galera cluster with more than one node.${normal}"
exit 1
<% end %>
